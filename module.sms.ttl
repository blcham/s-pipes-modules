@prefix kbss-module: <http://onto.fel.cvut.cz/ontologies/lib/module/> .
@prefix km-form: <http://onto.fel.cvut.cz/ontologies/lib/module/form/> .
@prefix km-param: <http://onto.fel.cvut.cz/ontologies/lib/module-param/> .
@prefix km-rdf2csv: <http://onto.fel.cvut.cz/ontologies/lib/module/RDF2CSV/> .
@prefix km-rdf4j: <http://onto.fel.cvut.cz/ontologies/lib/module/rdf4j/> .
@prefix km-tabular: <http://onto.fel.cvut.cz/ontologies/lib/module/tabular/> .
@prefix km-text-analysis: <http://onto.fel.cvut.cz/ontologies/lib/module/text-analysis/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

kbss-module:generic-kbss-modules a rdfs:Class ;
    rdfs:label "Generic KBSS modules" ;
    rdfs:subClassOf kbss-module:kbss-modules .

kbss-module:inbas-modules a rdfs:Class ;
    rdfs:label "INBAS modules" ;
    rdfs:subClassOf kbss-module:kbss-modules .

kbss-module:kbss-modules a rdfs:Class ;
    rdfs:label "KBSS modules" ;
    rdfs:subClassOf sm:Modules .

<http://onto.fel.cvut.cz/ontologies/lib/module> a owl:Ontology ;
    owl:imports <http://www.w3.org/ns/shacl> .

kbss-module:RDF2CSV a sm:Module ;
    rdfs:label "RDF to CSV" ;
    sh:parameter [
        sh:path km-rdf2csv:file-output-path ;
        sh:optional false ;
        sh:description "The parameter representing where the output file will be stored" ;
    ] ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:apply-construct-with-chunked-values a sm:Module ;
    rdfs:label "Apply construct with chunked values" ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/apply-construct-with-chunked-values/chunk-size> ;
        sh:optional true ;
        sh:description "Chunk size" ;
    ] ;
    sh:parameter [
        sh:path kbss-module:has-max-iteration-count ;
        sh:optional true ;
        sh:description "Maximal number of iterations of the whole rule set. The actual number of iterations can be smaller, if no new inferences are generated any more. Cases: a) iterationCount = 0 means none of the rules will be executed,  b) iterationCount = 1 means the whole rule set is executed only once, c) iterationCount > 1 means the whole rule set is executed at most 'iterationCount' times. In each iteration, queries are evaluated on the model merged from the default model and the result of previous iteration. Within each iteration, all queries are evaluated on the same model." ;
    ] ;
    sh:parameter [
        sh:path kbss-module:is-parse-text ;
        sh:optional true ;
        sh:description "If set to true, the queries are parsed rather from textual representation than spin-representation." ;
    ] ;
    sh:parameter [
        sh:path sml:replace ;
        sh:optional true ;
        sh:description "If set to true, the output triples will only contain the constructed triples. If no values or false are specified, the output will be the union of the input triples and the constructed triples." ;
    ] ;
    sh:parameter [
        sh:path sml:selectQuery ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:description "The select query that will be used to iterate over construct query templates." ;
    ] ;
    sh:parameter [
        sh:path sml:constructQuery ;
        sh:minCount 1 ;
        sh:description "The construct queries with marker #${VALUES}." ;
    ] ;
    rdfs:comment "Runs one or more construct queries on the input triples. Queries are executed multiple times with inserted values clause within the queries. The values clause is marked by #${VALUES} marker. It is substituted by output of provided select query and specified chunk size which defines how many rows of the select query will be substituted for the marker." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:apply-construct-with-chunked-values-and-scrollable-cursor a sm:Module ;
    rdfs:label "Apply construct with chunked values and scrollable cursor" ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/apply-construct-with-chunked-values-and-scrollable-cursor/page-size> ;
        sh:optional true ;
        sh:datatype xsd:integer ;
        sh:description "Page size for the scrollable cursor" ;
    ] ;
    sh:parameter [
        sh:path kbss-module:has-max-iteration-count ;
        sh:optional true ;
        sh:description "Maximal number of iterations of the whole rule set. The actual number of iterations can be smaller, if no new inferences are generated any more. Cases: a) iterationCount = 0 means none of the rules will be executed,  b) iterationCount = 1 means the whole rule set is executed only once, c) iterationCount > 1 means the whole rule set is executed at most 'iterationCount' times. In each iteration, queries are evaluated on the model merged from the default model and the result of previous iteration. Within each iteration, all queries are evaluated on the same model." ;
    ] ;
    sh:parameter [
        sh:path kbss-module:is-parse-text ;
        sh:optional true ;
        sh:description "If set to true, the queries are parsed rather from textual representation than spin-representation." ;
    ] ;
    sh:parameter [
        sh:path sml:replace ;
        sh:optional true ;
        sh:description "If set to true, the output triples will only contain the constructed triples. If no values or false are specified, the output will be the union of the input triples and the constructed triples." ;
    ] ;
    sh:parameter [
        sh:path sml:selectQuery ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:description "The select query that will be used to iterate over construct query templates." ;
    ] ;
    sh:parameter [
        sh:path sml:constructQuery ;
        sh:minCount 1 ;
        sh:description "The construct queries with markers #${VALUES} and #${LIMIT_OFFSET}." ;
    ] ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/apply-construct-with-chunked-values-and-scrollable-cursor/chunk-size> ;
        sh:optional true ;
        sh:description "Chunk size" ;
    ] ;
    rdfs:comment "Runs one or more construct queries on the input triples. Queries are executed multiple times with inserted values clause and limit+offset clauses within the queries. The values clause is marked by #${VALUES} marker, while limit+offset clauses are marked by #${LIMIT_OFFSET} marker. #${VALUES} marker is substituted by output of provided select query and specified chunk size which defines how many rows of the select query will be substituted for the marker. Each such query is executed multiple times with scrollable cursor, i.e. #${LIMIT_OFFSET} marker is substituted by sparql constructs 'LIMIT ?limit' and 'OFFSET ?offset'. The output RDF will consist of the constructed triples and (unless sml:replace is true) the input triples." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:apply-construct-with-scrollable-cursor a sm:Module ;
    rdfs:label "Apply construct with scrollable cursor" ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/apply-construct-with-scrollable-cursor/page-size> ;
        sh:optional true ;
        sh:datatype xsd:integer ;
        sh:description "Page size" ;
    ] ;
    sh:parameter [
        sh:path kbss-module:has-max-iteration-count ;
        sh:optional true ;
        sh:description "Maximal number of iterations of the whole rule set. The actual number of iterations can be smaller, if no new inferences are generated any more. Cases: a) iterationCount = 0 means none of the rules will be executed,  b) iterationCount = 1 means the whole rule set is executed only once, c) iterationCount > 1 means the whole rule set is executed at most 'iterationCount' times. In each iteration, queries are evaluated on the model merged from the default model and the result of previous iteration. Within each iteration, all queries are evaluated on the same model." ;
    ] ;
    sh:parameter [
        sh:path kbss-module:is-parse-text ;
        sh:optional true ;
        sh:description "If set to true, the queries are parsed rather from textual representation than spin-representation." ;
    ] ;
    sh:parameter [
        sh:path sml:replace ;
        sh:optional true ;
        sh:description "If set to true, the output triples will only contain the constructed triples. If no values or false are specified, the output will be the union of the input triples and the constructed triples." ;
    ] ;
    sh:parameter [
        sh:path sml:constructQuery ;
        sh:minCount 1 ;
        sh:description "The construct queries with marker #${LIMIT_OFFSET}." ;
    ] ;
    rdfs:comment "Runs one or more construct queries (bound to sml:constructQuery) on the input triples. Queries are executed multiple times with scrollable cursor that is injected through query marker #${LIMIT_OFFSET}. The marker is replaced each time with appropriate sparql constructs 'LIMIT ?limit' and 'OFFSET ?offset'. Within each construct query the output RDF will consist of the constructed triples and (unless sml:replace is true) the input triples." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:bind-rdf-content-hash a sm:Module ;
    rdfs:label "Bind rdf content hash" ;
    sh:parameter [
        sh:path sm:outputVariable ;
        sh:optional false ;
        sh:description "Output variable to store computed hash" ;
    ] ;
    rdfs:comment "Bind hash that is computed from input rdf data" ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:cli a sm:Module ;
    rdfs:label "Command-line" ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:construct-form-metadata a sm:Module ;
    rdfs:label "Construct form metadata" ;
    sh:parameter [
        sh:path sml:replace ;
        sh:datatype xsd:boolean ;
        sh:description "Replace context flag" ;
    ] ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:construct-textual-view a sm:Module ;
    rdfs:label "Construct textual view of questions provided in input" ;
    sh:parameter [
        sh:path sml:replace ;
        sh:datatype xsd:boolean ;
        sh:description "Replace context flag" ;
    ] ;
    sh:parameter [
        sh:path km-form:serialize-unanswered-questions ;
        sh:datatype xsd:boolean ;
        sh:description "If true (default), outputs questions not having answers" ;
    ] ;
    sh:parameter [
        sh:path km-form:serialize-answers ;
        sh:datatype xsd:boolean ;
        sh:description "If true (default), outputs answers not only questions" ;
    ] ;
    sh:parameter [
        sh:path km-form:process-non-root-questions ;
        sh:datatype xsd:boolean ;
        sh:description "If true (default), process all questions, otherwise process only root questions" ;
    ] ;
    sh:parameter [
        sh:path km-form:indentation-string ;
        sh:datatype xsd:string ;
        sh:description "Indentation string indents subquestion from questions. By default '  ' is used." ;
    ] ;
    sh:parameter [
        sh:path km-form:language ;
        sh:datatype xsd:string ;
        sh:description "Language to be used to retrieve labels of questions. By default 'en' is used." ;
    ] ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:deploy a sm:Module ;
    rdfs:label "Deploy" ;
    sh:parameter [
        sh:path km-rdf4j:p-rdf4j-context-iri ;
        sh:optional false ;
        sh:description "Context IRI" ;
    ] ;
    sh:parameter [
        sh:path km-rdf4j:p-rdf4j-repository-name ;
        sh:optional false ;
        sh:description "Repository name" ;
    ] ;
    sh:parameter [
        sh:path km-rdf4j:p-rdf4j-server-url ;
        sh:optional false ;
        sh:description "Server URL" ;
    ] ;
    sh:parameter [
        sh:path km-rdf4j:p-is-replace ;
        sh:datatype xsd:boolean ;
        sh:description "Replace context flag" ;
    ] ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:external-schemex a sm:Module ;
    rdfs:label "Compute schemex using external script" ;
    sh:parameter [
        sh:path sml:sourceFilePath ;
        sh:description "Source file in nt format." ;
    ] ;
    rdfs:comment "Compute schemex using external script for a specified sourceFilePath." ;
    rdfs:subClassOf kbss-module:inbas-modules .

kbss-module:extract-term-occurrences a sm:Module ;
    rdfs:label "Extract term occurrences" ;
    sh:parameter [
        sh:path sml:replace ;
        sh:optional true ;
        sh:description "If set to true, the output triples will only contain the constructed triples. If no values or false are specified, the output will be the union of the input triples and the constructed triples." ;
    ] ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:fetch-possible-values a sm:Module ;
    rdfs:label "Fetch possible values of question" ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:form-generator a sm:Module ;
    rdfs:label "Form generator" ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:import-e5x a sm:Module ;
    rdfs:label "Import E5X file" ;
    sh:parameter [
        sh:path km-param:has-resource-uri ;
        sh:optional false ;
        sh:description "Uri of a resource referencing content of an e5x file" ;
    ] ;
    rdfs:comment "Import E5X file by creating RDF representation of the file" ;
    rdfs:subClassOf kbss-module:inbas-modules .

kbss-module:improve-spo-with-marginals a sm:Module ;
    rdfs:label "Improve spo summary with marginals" ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/improve-spo-with-marginals/marginals-defs-file-url> ;
        sh:optional false ;
        sh:description "Marginal definitions file url" ;
    ] ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/improve-spo-with-marginals/data-service-url> ;
        sh:optional false ;
        sh:description "Data service url" ;
    ] ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/improve-spo-with-marginals/marginal-constraint> ;
        sh:optional true ;
        sh:description "Marginal constraint" ;
    ] ;
    rdfs:comment "Constructs improved spo-summary descriptor with knowledge of provided marginals of weakly described resources. This module expects as an input graph computed spo-summary patterns (or possibly whole spo-summary descriptor) compliant with data provided in ?data-service-url. Within the input graph it identifies 'breakable patterns', i.e. spo-summary patterns that can be improved with knowledge of marginals computed in ?marginals-defs-file-url. The output of the module is a spo-summary descriptor that contains original spo-summary patterns whenever possible and new spo-summary patterns that were created with additional knowledge of marginals." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:merge-form-metadata a sm:Module ;
    rdfs:label "Merge form metadata" ;
    sh:parameter [
        sh:path sml:replace ;
        sh:datatype xsd:boolean ;
        sh:description "Replace context flag" ;
    ] ;
    sh:parameter [
        sh:path kbss-module:execution-id ;
        sh:datatype xsd:string ;
        sh:description "Execution id that will be used to construct question IRIs" ;
    ] ;
    rdfs:comment "Inputs are sample form and Q&A model. Questions from both models are remapped to new IRIs based on question origin combined with executionId." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:rdf4j-create-repository a sm:Module ;
    rdfs:label "RDF4J Update" ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:rdf4j-update a sm:Module ;
    rdfs:label "RDF4J Update" ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:sparql-endpoint-download-graph a sm:Module ;
    rdfs:label "SpEP download graph" ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/sparql-endpoint-download-graph/endpoint-url> ;
        sh:optional false ;
        sh:description "Endpoint url" ;
    ] ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/sparql-endpoint-download-graph/named-graph-id> ;
        sh:optional true ;
        sh:description "Named graph id" ;
    ] ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/sparql-endpoint-download-graph/page-size> ;
        sh:optional true ;
        sh:datatype xsd:integer ;
        sh:description "Page size" ;
    ] ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/sparql-endpoint-download-graph/output-resource-variable> ;
        sh:optional true ;
        sh:datatype xsd:integer ;
        sh:description "Output resource variable" ;
    ] ;
    rdfs:comment "Downloads graph from sparql endpoint specified by 'endpointUrl' and optionally 'namedGraphId' and saves it in ntriples format into new file whose path is returned through variable defined by outputResourceVariable. If namedGraphId is not specified it downloads the default graph." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:sparql-endpoint-retrieve-graph a sm:Module ;
    rdfs:label "SpEP retrieve graph" ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/sparql-endpoint-retrieve-graph/endpoint-url> ;
        sh:optional false ;
        sh:description "Endpoint url" ;
    ] ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/sparql-endpoint-retrieve-graph/named-graph-id> ;
        sh:optional true ;
        sh:description "Named graph id" ;
    ] ;
    sh:parameter [
        sh:path <http://onto.fel.cvut.cz/ontologies/lib/module/sparql-endpoint-retrieve-graph/page-size> ;
        sh:optional true ;
        sh:datatype xsd:integer ;
        sh:description "Page size" ;
    ] ;
    rdfs:comment "Retrieves graph from sparql endpoint specified by ?endpointUrl and optionally ?namedGraphId. If ?namedGraphId is not specified it retrieves the default graph." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:tabular a sm:Module ;
    rdfs:label "Tabular" ;
    sh:parameter [
        sh:path km-tabular:quote-character ;
        sh:optional true ;
        sh:description "Quote" ;
    ] ;
    sh:parameter [
        sh:path km-tabular:data-prefix ;
        sh:optional true ;
        sh:description "Data prefix" ;
    ] ;
    sh:parameter [
        sh:path km-tabular:output-mode ;
        sh:optional true ;
        sh:description "Output mode" ;
    ] ;
    sh:parameter [
        sh:path km-tabular:delimiter ;
        sh:optional true ;
        sh:description "Delimiter" ;
    ] ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

km-tabular:minimal-mode a km-tabular:Mode ;
    rdfs:label "Minimal mode" .

km-tabular:standard-mode a km-tabular:Mode ;
    rdfs:label "Standard mode" .

kbss-module:tarql a sm:Module ;
    rdfs:label "TARQL" ;
    sh:parameter [
        sh:path sml:replace ;
        sh:optional true ;
        sh:description "If set to true, the output triples will only contain the constructed triples. If no values or false are specified, the output will be the union of the input triples and the constructed triples." ;
    ] ;
    sh:parameter [
        sh:path sml:sourceFilePath ;
        sh:description "Source CSV file." ;
    ] ;
    sh:parameter [
        sh:path sml:constructQuery ;
        sh:minCount 1 ;
        sh:description "The TARQL Construct queries that deliver the triples that shall be added." ;
    ] ;
    rdfs:comment "Runs one or more TARQL Construct queries on the input triples. The output RDF will consist of the constructed triples and (unless sml:replace is true) the input triples." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:temporal-v1 a sm:Module ;
    rdfs:label "Temporal v1" ;
    rdfs:comment "Module annotates input triples using NLP analysis of time using library SUTime." ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:text-analysis a sm:Module ;
    rdfs:label "Text analysis" ;
    sh:parameter [
        sh:path km-text-analysis:service-url ;
        sh:optional true ;
        sh:description "The URL of the text analysis service to be used." ;
    ] ;
    sh:parameter [
        sh:path km-text-analysis:vocabulary-iri ;
        sh:optional true ;
        sh:description "The IRI of the vocabulary to be used for entity recognition." ;
    ] ;
    sh:parameter [
        sh:path km-text-analysis:vocabulary-repository ;
        sh:optional true ;
        sh:description "The IRI of the repository where the vocabulary is stored." ;
    ] ;
    sh:parameter [
        sh:path km-text-analysis:language ;
        sh:optional true ;
        sh:description "The language of the text to be analyzed." ;
    ] ;
    sh:parameter [
        sh:path km-text-analysis:literals-per-request ;
        sh:optional true ;
        sh:description "The number of literals to be processed per request to the web service." ;
    ] ;
    sh:parameter [
        sh:path km-text-analysis:selectQuery ;
        sh:optional true ;
        sh:description "The SPARQL query to be used for selecting literals from the repository." ;
    ] ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

kbss-module:void a sm:Module ;
    rdfs:label "VOID" ;
    rdfs:subClassOf kbss-module:generic-kbss-modules .

km-param:has-resource-uri a rdf:Property ;
    rdfs:label "has resource uri" .

kbss-module:has-debug-mode-flag a rdf:Property ;
    rdfs:label "has debug mode flag" ;
    rdfs:subPropertyOf sh:SPARQLConstraint .

kbss-module:has-input-graph-constraint a rdf:Property ;
    rdfs:label "has input graph constraint" ;
    rdfs:comment "Specifies constraint on merged input graph of the module. The constraint can be specified by ASK query which should return true if constraint is violated. If first line of the query is SPARQL comment, this comment is used to give user human readable description (e.g. within the log of s-pipes execution)." ;
    rdfs:subPropertyOf sh:SPARQLConstraint .

kbss-module:has-output-graph-constraint a rdf:Property ;
    rdfs:label "has output graph constraint" ;
    rdfs:comment "Specifies constraint on returned output graph of the module. The constraint can be specified by ASK query which should return true if constraint is violated. If first line of the query is SPARQL comment, this comment is used to give user human readable description (e.g. within the log of s-pipes execution)." ;
    rdfs:subPropertyOf sh:SPARQLConstraint .

kbss-module:has-target-module-flag a rdf:Property ;
    rdfs:label "has target module flag" ;
    rdfs:subPropertyOf sh:SPARQLConstraint .

km-rdf4j:p-is-replace a rdf:Property ;
    rdfs:label "Is replace" .

km-rdf4j:p-rdf4j-context-iri a rdf:Property ;
    rdfs:label "Rdf4j context IRI" .

km-rdf4j:p-rdf4j-repository-name a rdf:Property ;
    rdfs:label "Rdf4j repository name" .

km-rdf4j:p-rdf4j-server-url a rdf:Property ;
    rdfs:label "Rdf4j server URL" .

km-tabular:output-mode a rdf:Property ;
    rdfs:range km-tabular:Mode .

sm:Modules
    sh:parameter [
        sh:path kbss-module:has-debug-mode-flag ;
        sh:optional true ;
        sh:datatype xsd:boolean ;
        sh:description "Indicates whether this module should be in debug mode."^^xsd:string ;
    ] ;
    sh:parameter [
        sh:path kbss-module:has-input-graph-constraint ;
        sh:optional true ;
        sh:description "Condition on input graph of this module."^^xsd:string ;
    ] ;
    sh:parameter [
        sh:path kbss-module:has-output-graph-constraint ;
        sh:optional true ;
        sh:description "Condition on output graph of this module."^^xsd:string ;
    ] ;
    sh:parameter [
        sh:path kbss-module:has-target-module-flag ;
        sh:optional true ;
        sh:datatype xsd:boolean ;
        sh:description "Indicates whether this module should be executed as target module in debug environment."^^xsd:string ;
    ] .

kbss-module:has-max-iteration-count a rdf:Property ;
    rdfs:label "maximum number of iterations"^^xsd:string ;
    rdfs:comment "Specifies what is maximum number of iterations of certain algorithm." ;
    rdfs:range xsd:integer .

kbss-module:is-parse-text a rdf:Property ;
    rdfs:label "parse text"^^xsd:string ;
    rdfs:comment "Specifies whether a module shall use some parameter values from its RDF representation or from its textual value." ;
    rdfs:range xsd:boolean .

km-tabular:Mode a sm:ValueType .
